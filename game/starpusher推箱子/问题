(1)for x in range(len(mapTextLines[0])):构建一个二维的图表
mapObj.append([])
for y in range(len(mapTextLines)):代表行
for x in range(maxWidth):代表列
mapObj[x].append(mapTextLines[y][x])

(2)读取配置文件



将所有用到的图片创建在一个字典中
    # A global dict value that will contain all the Pygame
    # Surface objects returned by pygame.image.load().
    IMAGESDICT = {'uncovered goal': pygame.image.load('RedSelector.png'),
                  'covered goal': pygame.image.load('Selector.png'),
                  'star': pygame.image.load('Star.png'),
                  'corner': pygame.image.load('Wall_Block_Tall.png'),
                  'wall': pygame.image.load('Wood_Block_Tall.png'),
                  'inside floor': pygame.image.load('Plain_Block.png'),
                  'outside floor': pygame.image.load('Grass_Block.png'),
                  'title': pygame.image.load('star_title.png'),
                  'solved': pygame.image.load('star_solved.png'),
                  'princess': pygame.image.load('princess.png'),
                  'boy': pygame.image.load('boy.png'),
                  'catgirl': pygame.image.load('catgirl.png'),
                  'horngirl': pygame.image.load('horngirl.png'),
                  'pinkgirl': pygame.image.load('pinkgirl.png'),
                  'rock': pygame.image.load('Rock.png'),
                  'short tree': pygame.image.load('Tree_Short.png'),
                  'tall tree': pygame.image.load('Tree_Tall.png'),
                  'ugly tree': pygame.image.load('Tree_Ugly.png')}


利用IMAGEDICT中的key创建需要的各个对象
    # These dict values are global, and map the character that appears
    # in the level file to the Surface object it represents.
    砖块图字典
    TILEMAPPING = {'x': IMAGESDICT['corner'],
                   '#': IMAGESDICT['wall'],
                   'o': IMAGESDICT['inside floor'],
                   ' ': IMAGESDICT['outside floor']}
    外围图字典
    OUTSIDEDECOMAPPING = {'1': IMAGESDICT['rock'],
                          '2': IMAGESDICT['short tree'],
                          '3': IMAGESDICT['tall tree'],
                          '4': IMAGESDICT['ugly tree']}

    # PLAYERIMAGES is a list of all possible characters the player can be.
    # currentImage is the index of the player's current player image.
    玩家图字典
    currentImage = 0
    PLAYERIMAGES = [IMAGESDICT['princess'],
                    IMAGESDICT['boy'],
                    IMAGESDICT['catgirl'],
                    IMAGESDICT['horngirl'],
                    IMAGESDICT['pinkgirl']]




对于判断是否的函数可以用这种函数来命名def isSomething（）  
def isWall(mapObj, x, y):

命名技巧：采用驼峰命名法：readLevelFile 开始小写，然后每个开头大写， 命名尽可能做到看名知意
主程序

---------------------
>>> a=[1,2,3]
>>> a
[1, 2, 3]        注意，当b=a时，改变b的同时也改变了a
>>> b=a
>>> b
[1, 2, 3]
>>> b[1]=5
>>> b
[1, 5, 3]
>>> a
[1, 5, 3]

-----------------------
