----------------------------------------------------------------------------------------------------------
字符编码（英语：Character encoding）也称字集码，是把字符集中的字符编码为指定集合中某一对象，
以便文本在计算机中存储和通过通信网络的传递。

在计算机中，所有的数据在存储和运算时都要使用二进制数表示（因为计算机用高电平和低电平分别表示1和0），
例如，像a、b、c、d这样的52个字母（包括大写）、以及0、1等数字还有一些常用的符号（例如*、#、@等）在计
算机中存储时也要使用二进制数来表示，而具体用哪些二进制数字表示哪个符号，当然每个人都可以约定
自己的一套（这就叫编码），而大家如果要想互相通信而不造成混乱，那么大家就必须使用相同的编码规则，
/*=====================================================================================================*/ 
						ASCII

计算机信息（数字、文字、图片）在电子中是以二进制 1 和 0（01000101）进行存储的。
为了规范字母数字字符的存储，创建了 ASCII（全称 American Standard Code for Information Interchange）。
它为每个存储字符定义了一个独特的二元 7 位数字，支持 0-9 数字，大/小写英文字母（a-z、A-Z）和一些特殊的字符.
由于 ASCII 使用一个字节（7 位表示字符，1 位表示传输奇偶控制），所以它只能表示 128 个不同的字符。
这些字符中有 32 个被保留作为其他控制目的使用。

ASCII 的最大的缺点是，它排除了非英文字母。
-----------------------
ASCII 可打印的字符
字符	编号 描述
32	空格（space）
!	33	感叹号（exclamation mark）
.    .   . 
.    .   .
.    .   .
0    48  数字0
.    .   . 
.    .   .
.    .   .
A	65	大写字母 A
a	97	小写字母 a
~	126	波浪线（tilde）


------------------------
常见进制
bin         dec   Hex   字符
01000001    65    41    A
	　	　
01000010    66    42    B
	　	　
------------------------
ASCII 设备控制字符

ASCII 控制字符（00-31，加上 127）最初被设计用来控制诸如打印机和磁带驱动器之类的硬件设备。
控制字符（除了水平制表符、换行、回车之外）在 HTML 文档中不起任何作用。

字符	编号	描述
NUL	00	空字符（null character）
SOH	01	标题开始（start of header）
.    .   . 
.    .   .
.    .   .
US	31	单元分隔符（unit separator）
DEL	127	删除（delete）
/*=====================================================================================================*/ 
				ANSI（Windows-1252） 参考手册

ANSI（也称为 Windows-1252），是 Windows 95 及其之前的 Windows 系统中默认的字符集。
ANSI 是 ASCII 的扩展，它加入了国际字符。它使用一个完整的字节（8 位）来表示 256 个不同字符。
自从 ANSI 成为 Windows 中默认的字符集，所有的浏览器都支持 ANSI。

重要提示
ANSI 和 ISO-8859-1 非常相似，唯一的不同是在 32 个字符上。
在 ANSI 中，从 128 到 159 的字符用于一些有用的字符，比如欧元符号。
在 ISO-8859-1 中，这些字符映射为在 HTML 中不起作用的控制字符。
许多 Web 开发者声明 ISO-8859-1，并使用这 32 个值，就像它们使用的是 Windows-1252。
由于这种常见的误解，当 ISO-8859-1 被声明时，浏览器将更改为 Windows-1252。这对以下文档类型都适用：HTML4、HTML5 和 XHTML。
/*=====================================================================================================*/ 
				ISO-8859-1 参考手册			西欧字符编码

ISO 8859-1 和 ASCII
ISO-8859-1 的第一部分（实体编号 0-127）是原来的 ASCII 字符集。它包含数字、大小写英文字母和一些特殊字符。
在 ISO-8859-1 中，未使用从 128 到 159 的编码，但是很多浏览器会显示 ANSI（Windows-1252）字符集的字符，而不是什么都不显示。

ISO 8859-1 字符
ISO-8859-1 的最后一部分（编码 192-255，除了 215 和 247）包含了西欧国家使用的字符。
/*=====================================================================================================*/ 
 				Unicode（UTF-8） 参考手册

Unicode 联盟（Unicode Consortium）
Unicode 联盟（Unicode Consortium）开发了 Unicode 标准（Unicode Standard）。他们的目标是使用
标准的 Unicode 转换格式（即 UTF，全称 Unicode Transformation Format）取代现有的字符集。

如果有一种编码，将世界上所有的符号都纳入其中，无论是英文、日文、还是中文等，大家都使用这个编码表，
就不会出现编码不匹配现象。每个符号对应一个唯一的编码，乱码问题就不存在了。这就是Unicode编码。

Unicode当然是一个很大的集合，现在的规模可以容纳100多万个符号。每个符号的编码都不一样，比如，U+0639表示
阿拉伯字母Ain，U+0041表示英语的大写字母A，“汉”这个字的Unicode编码是U+6C49。

Unicode固然统一了编码方式，但是它的效率不高，比如UCS-4(Unicode的标准之一)规定用4
个字节存储一个符号，那么每个英文字母前都必然有三个字节是0，这对存储和传输来说都很耗资源。

为了提高Unicode的编码效率，于是就出现了UTF-8编码。UTF-8可以根据不同的符号自动选择编码的长短。比如英文字母可以只用1个字节就够了。

需要了解的是：
	Unicode，只是一个字符集的概念，即表示，设计了一套逻辑，可以用不同的值，
	表示不同的字符，这个是Unicode标准做的事情，即支持了所有的字符；
	但是，要把Unicode，在计算机中实现出来，表示出来，以及把Unicode字符，
	从从一个地方发送到别的地方，即字符交换，方面，则涉及到，实际上所采用的字符编码；
	把字符集Unicode表示出来的字符编码，有多种，最常见的有，UTF-8和UTF-16，次常见的还有UTF-32。

即：
	Unicode是字符集的概念，UTF-8，UTF-16是字符编码的概念；
	UTF-8，UTF-16等，只是Unicode的实现方式之一。
/*=====================================================================================================*/ 
